/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.args4           = fourth set of arguments appended to command in module (multi-tool modules).
        ext.args5           = fifth set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
        ext.suffix          = File name suffix for output files.
        ext.suffix2         = File name suffix for output2 files.
        ext.when            = Conditional clause
----------------------------------------------------------------------------------------
*/

process {

    withName: '.*ID_SNP:ALLELE_CALL' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"
        ext.when    = params.idsnp
        ext.args    = [
            "-Ou",
            "-R ${params.idSnp_bed}",
            "-f ${params.genome_file}",
            "-d 1000",
            "-q 10",
        ].join(' ')
        ext.args2 = { "-A -C alleles -T ${params.idSnp_bed_gz} -m  -Ov" }
        ext.args3 = [ 
                    "-a ${params.idSnp_std_bed_gz}",
                    "-c CHROM,FROM,TO,ID",
                    "-h ${params.header}", 
                    ].join(' ')
        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/QC",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> 
                if (filename == 'versions.yml') {
                    return null 
                } else if (filename.endsWith('.final.vcf') || filename.endsWith('.genotypes.json')) {
                    return filename
                }
                return null
                }
        ]
    }

    withName: '.*ID_SNP:SNP_CHECK' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"
        ext.args = { "--rs_bed ${params.idSnp_bed}" }
        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/QC",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.when    = params.idsnp
    }

    
    withName: '.*ID_SNP:PAIR_CDM' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.crondir}/pairedness",
            mode: 'copy',
            overwrite: true,
            pattern: "*.pairscore"
        ]
        ext.when    = params.idsnp
    }


/*     withName: '.*ID_SNP:PROVIDER' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/QC",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]       
        ext.when    = params.idsnp
        ext.args    = [
            "--bed ${params.ref_bed}",
            "--bedxy ${params.ref_bedXy}",
        ].join(' ')
    } */
}