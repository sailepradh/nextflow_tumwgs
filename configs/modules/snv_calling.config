/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.args4           = fourth set of arguments appended to command in module (multi-tool modules).
        ext.args5           = fifth set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
        ext.suffix          = File name suffix for output files.
        ext.suffix2         = File name suffix for output2 files.
        ext.when            = Conditional clause
----------------------------------------------------------------------------------------
*/

process {
    withName: '.*SNV_CALLING:FREEBAYES' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        ext.when    = params.freebayes
        ext.args    = { "-f ${params.genome_file} --pooled-continuous --pooled-discrete --min-repeat-entropy 1" }
        ext.args2   = { "-F LowCov -f \"DP > 30\" -f \"QA > 150\"" } 
        ext.args3   = { "-F LowFrq -o -f \"AB > 0.05\" -f \"AB = 0\"" }
    }

    withName: '.*SNV_CALLING:VARDICT' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        ext.when    = params.vardict
        ext.args    = { "-G ${params.genome_file} -c 1 -S 2 -E 3 -g 4" }
    }

    withName: '.*SNV_CALLING:TNSCOPE' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"

        ext.when    = params.tnscope
        ext.args    = { "-r ${params.genome_file}" }        // for reference
        ext.args2   = [                                     // For other paramters
            "--clip_by_minbq 1",
            "--max_error_per_read 3",
            "--min_init_tumor_lod 2.0",
            "--min_base_qual 10",
            "--min_base_qual_asm 10",
        ].join(' ')
    }

    withName: '.*SNV_CALLING:CONCATENATE_VCFS' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"
        publishDir = [
            path: "${params.outdir}/${params.subdir}/vcf", 
            mode: 'copy', 
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

        ext.args = { "-r ${params.genome_file}" }
    }

    withName: '.*SNV_CALLING:AGGREGATE_VCFS' {
        container = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"
        publishDir = [
            path: "${params.outdir}/${params.subdir}/vcf", 
            mode: 'copy', 
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*SNV_CALLING:MELT' {
        container = "${params.container_dir}/melt_2.2.2.sif"
        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

        ext.when = params.melt
        ext.args = { "-r 150 -h ${params.genome_file} -n /opt/MELTv2.2.2/add_bed_files/Hg38/Hg38.genes.bed -z 500000 -d 50 -t /opt/mei_list" }
    }

    withName: '.*SNV_CALLING:SVDB_MERGE_SINGLES' {
        container   = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"
        ext.args    = { "--no_intra --pass_only --bnd_distance 10 --overlap 1.0" }
    }

    withName: '.*SNV_CALLING:BEDTOOLS_INTERSECT' {
        container   = "${params.container_dir}/SomaticPanelPipeline_2021-06-24.sif"
        publishDir = [ 
            path: "${params.outdir}/${params.subdir}/vcf",
            mode: 'copy',
            overwrite: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args    = { "-header" }
    }

}